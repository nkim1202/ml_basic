{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.3"},"colab":{"name":"t06_mnist_cross_entropy.ipynb의 사본","provenance":[{"file_id":"https://github.com/nkim1202/ml_basic/blob/main/t06_mnist_cross_entropy.ipynb","timestamp":1602483079616}]}},"cells":[{"cell_type":"code","metadata":{"id":"NMQuRwDDBrgV","executionInfo":{"status":"ok","timestamp":1602482620752,"user_tz":420,"elapsed":753,"user":{"displayName":"","photoUrl":"","userId":""}}},"source":["import numpy as np\n","from datetime import datetime\n","\n","class MNIST:\n","    \n","    def __init__(self, num_input, num_hidden, num_output, learning_rate = 1e-2):\n","        \n","        print(\"*Info: Processing MNIST testing ...\")\n","                \n","        # initializing weights and biases in hidden/output layers    \n","        self.num_input   = num_input\n","        self.num_hidden  = num_hidden\n","        self.num_output  = num_output\n","        \n","        self.input_data  = []\n","        self.target_data = []\n","        \n","        self.W2 = np.random.randn(self.num_input, self.num_hidden) / np.sqrt(self.num_input/2)\n","        self.b2 = np.random.rand(self.num_hidden)              \n","        self.W3 = np.random.randn(self.num_hidden, self.num_output) / np.sqrt(self.num_hidden/2)\n","        self.b3 = np.random.rand(self.num_output)     \n","\n","        self.Z3 = np.zeros([1,num_output])\n","        self.A3 = np.zeros([1,num_output])        \n","        self.Z2 = np.zeros([1,num_hidden])\n","        self.A2 = np.zeros([1,num_hidden])\n","        self.Z1 = np.zeros([1,num_input])    \n","        self.A1 = np.zeros([1,num_input])   \n","        \n","        # initializing leanring rate\n","        self.learning_rate = learning_rate\n","        \n","        # handling numerical errors\n","        self.delta = 1e-7 \n","       \n","    def train(self, input_data, target_data):\n","        \n","        self.input_data  = input_data\n","        self.target_data = target_data\n","\n","        loss_val = self.feed_forward()\n","        \n","        # loss in output layer, loss_3\n","        loss_3 = (self.A3-self.target_data) * self.A3 * (1-self.A3)\n","        self.W3 = self.W3 - self.learning_rate * np.dot(self.A2.T, loss_3)           \n","        self.b3 = self.b3 - self.learning_rate * loss_3\n","        \n","        # loss in hidden layer, loss_2\n","        loss_2 = np.dot(loss_3, self.W3.T) * self.A2 * (1-self.A2)        \n","        self.W2 = self.W2 - self.learning_rate * np.dot(self.A1.T, loss_2)          \n","        self.b2 = self.b2 - self.learning_rate * loss_2\n","   \n","    def feed_forward(self):\n","            \n","        self.Z1 = self.input_data\n","        self.A1 = self.input_data\n","           \n","        self.Z2 = np.dot(self.A1, self.W2) + self.b2\n","        self.A2 = self.sigmoid(self.Z2)\n","        \n","        self.Z3 = np.dot(self.A2, self.W3) + self.b3\n","        self.A3 = self.sigmoid(self.Z3)\n","        \n","        return  -np.sum( self.target_data*np.log(self.A3 + self.delta) + (1-self.target_data)*np.log((1 - self.A3)+self.delta ) )  \n","    \n","    def loss_val(self):\n","    \n","        self.Z1 = self.input_data\n","        self.A1 = self.input_data\n","           \n","        self.Z2 = np.dot(self.A1, self.W2) + self.b2\n","        self.A2 = self.sigmoid(self.Z2)\n","        \n","        self.Z3 = np.dot(self.A2, self.W3) + self.b3\n","        self.A3 = self.sigmoid(self.Z3)\n","        \n","        return  -np.sum( self.target_data*np.log(self.A3 + self.delta) + (1-self.target_data)*np.log((1 - self.A3)+self.delta ) )  \n","    \n","    def predict(self, input_data):\n","        \n","        z2 = np.dot(input_data, self.W2) + self.b2\n","        a2 = self.sigmoid(z2)\n","        z3 = np.dot(a2, self.W3) + self.b3\n","        a3 = self.sigmoid(z3)\n","    \n","        # predict number would be the highest number in the final list\n","        predict_num = np.argmax(a3)\n","    \n","        return predict_num\n","    \n","    def accuracy(self, test_data):\n","        \n","        matched_list = []\n","        not_matched_list = []\n","        \n","        # list which contains (index, label, prediction) value\n","        index_label_prediction_list = []\n","        \n","        # temp list which contains label and prediction in sequence\n","        temp_list = []\n","        \n","        for index in range(len(test_data)):\n","                        \n","            label = int(test_data[index, 0])\n","                        \n","            # normalize\n","            data = (test_data[index, 1:] / 255.0 * 0.99) + 0.01\n","      \n","            predicted_num = self.predict(np.array(data, ndmin=2))\n","        \n","            if label == predicted_num:\n","                matched_list.append(index)\n","                \n","            else:\n","                not_matched_list.append(index)\n","                \n","        print(\"       Current Accuracy = \", len(matched_list)/(len(test_data)) )\n","        \n","        return matched_list, not_matched_list\n","    \n","    def sigmoid(self, x):\n","        return 1 / (1+np.exp(-x))\n","\n","    def numerical_derivative(self, f, x):\n","\n","        grad = np.zeros_like(x)\n","\n","        it = np.nditer(x, flags=['multi_index'], op_flags=['readwrite'])\n","\n","        while not it.finished:\n","            idx = it.multi_index        \n","            tmp_val = x[idx]\n","            x[idx] = float(tmp_val) + self.delta\n","            fx1 = f(x) # f(x+delta)\n","\n","            x[idx] = tmp_val - self.delta \n","            fx2 = f(x) # f(x-delta)\n","            grad[idx] = (fx1 - fx2) / (2*self.delta)\n","\n","            x[idx] = tmp_val \n","            it.iternext()   \n","        \n","        return grad  \n"],"execution_count":43,"outputs":[]},{"cell_type":"code","metadata":{"id":"R7gQwvGUVA3T","executionInfo":{"status":"ok","timestamp":1602482490164,"user_tz":420,"elapsed":452,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"417262b7-e0a9-49dc-cffb-0b4b7b3f7710","colab":{"base_uri":"https://localhost:8080/","height":69}},"source":["!ls sample_data"],"execution_count":32,"outputs":[{"output_type":"stream","text":["anscombe.json\t\t      mnist_test.csv\n","california_housing_test.csv   mnist_train_small.csv\n","california_housing_train.csv  README.md\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"SHFywRCUBrgm","executionInfo":{"status":"ok","timestamp":1602482502478,"user_tz":420,"elapsed":11175,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"23b04cc7-a1b1-45d6-de9a-801b0f47c0a8","colab":{"base_uri":"https://localhost:8080/","height":52}},"source":["# training data : 60000 x 785\n","# 60000 lines with 785 columns in each line\n","# col[0] is the answer which is 0-9\n","# col[1:784] is data \n","training_data = np.loadtxt('sample_data/mnist_train_small.csv', delimiter=',', dtype=np.float32)\n","test_data     = np.loadtxt('sample_data/mnist_test.csv', delimiter=',', dtype=np.float32)\n","\n","print(\"*Info: Reading training data with shape of\", training_data.shape)\n","print(\"*Info: Reading test     data with shape of\", test_data.shape)\n","\n","# num of inputs, hidden layers and outputs\n","# num of input  nodes : 784\n","# num of hidden nodes : 8  --> this could be any number.\n","# num of output nodes : 10\n","\n","# initializing weightes and biases\n","# (60000x784)x(784x8)x(8x10) = (60000x10)\n","# W2 is (784x8)\n","# W3 is (8x10)\n","# basically it's (784x10) matrix.\n","# by adding a hidden layer with '8',\n","# it would be (784x8)x(8x10).\n","\n","num_inputs    = training_data.shape[1] - 1\n","num_hiddens   = 8      \n","num_outputs   = 10\n","learning_rate = 1e-2\n"],"execution_count":33,"outputs":[{"output_type":"stream","text":["*Info: Reading training data with shape of (20000, 785)\n","*Info: Reading test     data with shape of (10000, 785)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ISuVtZKbV0l5","executionInfo":{"status":"ok","timestamp":1602482504918,"user_tz":420,"elapsed":470,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"d4428421-f82c-47ee-b03a-a10a2d61360d","colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["print(num_inputs)"],"execution_count":34,"outputs":[{"output_type":"stream","text":["784\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"OuLULKFjBrg2","executionInfo":{"status":"ok","timestamp":1602482509142,"user_tz":420,"elapsed":484,"user":{"displayName":"","photoUrl":"","userId":""}}},"source":["# test training process.\n","\n","index         = np.random.randint(0, 19999)\n","\n","# normalizing input_data\n","# input_data is 1x784 matrix. each one ranges 0 - 255 which\n","# normalizes between 0 and 1 \n","input_data = ((training_data[index, 1:] / 255.0) * 0.99) + 0.01\n","#print(training_data[index, 1:], input_data)\n","\n","# normalizing target_data\n","# if answer is 9, then target_data[9] = 0.99 while others = 0.01\n","#7.0 [0.01 0.01 0.01 0.01 0.01 0.01 0.01 0.99 0.01 0.01]\n","target_data = np.zeros(num_outputs) + 0.01    \n","target_data[int(training_data[index, 0])] = 0.99\n","        \n","#print(training_data[index, 0], target_data) \n","    "],"execution_count":35,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZkCCkIt8BrhE","executionInfo":{"status":"ok","timestamp":1602482639934,"user_tz":420,"elapsed":8660,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"cf4faea2-14fa-48d7-cb5a-83b5ba69f06f","colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["print(\"*Info: Starting neural network learning using numerical derivative...\")\n","nn = MNIST(num_inputs, num_hiddens, num_outputs, learning_rate)\n","\n","epochs        = 3\n","loss_val_list = []\n","num_data      = len(training_data)\n","start_time    = datetime.now()\n","for step in range(epochs):\n","    \n","    for index in range(num_data):\n","                \n","        # normalizing input_data and target_data    \n","        input_data = ((training_data[index, 1:] / 255.0) * 0.99) + 0.01\n","        target_data = np.zeros(num_outputs) + 0.01    \n","        target_data[int(training_data[index, 0])] = 0.99\n","        \n","        nn.train(np.array(input_data, ndmin=2), np.array(target_data, ndmin=2))\n","        \n","        if (index % 500 == 0):\n","            print(\"       epochs = {0} index = {1} loss = {2}\" \\\n","                  .format(step, index, nn.loss_val()))\n","            \n","        loss_val_list.append(nn.loss_val())        \n","\n","end_time = datetime.now()\n","        \n","print()\n","print(\"*Info: Done with neural network learning using numerical derivative.\")\n","print(\"       Elapsed Time: {0}\" .format(end_time - start_time))"],"execution_count":44,"outputs":[{"output_type":"stream","text":["*Info: Starting neural network learning using numerical derivative...\n","*Info: Processing MNIST testing ...\n","       epochs = 0 index = 0 loss = 13.524568957464698\n","       epochs = 0 index = 500 loss = 4.108848162115263\n","       epochs = 0 index = 1000 loss = 3.492430339625844\n","       epochs = 0 index = 1500 loss = 3.2165260116971237\n","       epochs = 0 index = 2000 loss = 3.30569567634109\n","       epochs = 0 index = 2500 loss = 3.642151823011913\n","       epochs = 0 index = 3000 loss = 3.3887128568162543\n","       epochs = 0 index = 3500 loss = 3.303548788785648\n","       epochs = 0 index = 4000 loss = 3.432764175975067\n","       epochs = 0 index = 4500 loss = 3.5222516594924955\n","       epochs = 0 index = 5000 loss = 3.6900767889360964\n","       epochs = 0 index = 5500 loss = 2.972787173256584\n","       epochs = 0 index = 6000 loss = 3.195467610644881\n","       epochs = 0 index = 6500 loss = 3.376397514114758\n","       epochs = 0 index = 7000 loss = 2.461270607731975\n","       epochs = 0 index = 7500 loss = 3.613986005943924\n","       epochs = 0 index = 8000 loss = 3.0130362041700844\n","       epochs = 0 index = 8500 loss = 2.2489360415905932\n","       epochs = 0 index = 9000 loss = 2.909122719884936\n","       epochs = 0 index = 9500 loss = 3.25556962117376\n","       epochs = 0 index = 10000 loss = 2.9523453683140732\n","       epochs = 0 index = 10500 loss = 4.253315548609222\n","       epochs = 0 index = 11000 loss = 3.8383116444158527\n","       epochs = 0 index = 11500 loss = 1.8927984597287373\n","       epochs = 0 index = 12000 loss = 2.858465041534573\n","       epochs = 0 index = 12500 loss = 4.691678676204536\n","       epochs = 0 index = 13000 loss = 2.821067680497291\n","       epochs = 0 index = 13500 loss = 3.210367007450648\n","       epochs = 0 index = 14000 loss = 2.8093901106044235\n","       epochs = 0 index = 14500 loss = 2.4272636102089407\n","       epochs = 0 index = 15000 loss = 4.079560439744893\n","       epochs = 0 index = 15500 loss = 2.7275322918456206\n","       epochs = 0 index = 16000 loss = 2.377754575235158\n","       epochs = 0 index = 16500 loss = 1.803335748132578\n","       epochs = 0 index = 17000 loss = 1.9506165525007342\n","       epochs = 0 index = 17500 loss = 3.5726244304149457\n","       epochs = 0 index = 18000 loss = 3.078807681039262\n","       epochs = 0 index = 18500 loss = 3.722526716225031\n","       epochs = 0 index = 19000 loss = 2.2369383934027516\n","       epochs = 0 index = 19500 loss = 1.823076527156208\n","       epochs = 1 index = 0 loss = 2.6147245115142153\n","       epochs = 1 index = 500 loss = 3.701770383301617\n","       epochs = 1 index = 1000 loss = 2.018923442521776\n","       epochs = 1 index = 1500 loss = 1.6273703336262713\n","       epochs = 1 index = 2000 loss = 1.821268520762322\n","       epochs = 1 index = 2500 loss = 2.254594578391356\n","       epochs = 1 index = 3000 loss = 3.3271861835248373\n","       epochs = 1 index = 3500 loss = 3.2642742934230347\n","       epochs = 1 index = 4000 loss = 2.6236607486242005\n","       epochs = 1 index = 4500 loss = 2.8701477185144073\n","       epochs = 1 index = 5000 loss = 3.499639207383208\n","       epochs = 1 index = 5500 loss = 1.9885376385667681\n","       epochs = 1 index = 6000 loss = 2.4793229195904627\n","       epochs = 1 index = 6500 loss = 3.0377009710895053\n","       epochs = 1 index = 7000 loss = 1.8543395098412832\n","       epochs = 1 index = 7500 loss = 3.0327029928598597\n","       epochs = 1 index = 8000 loss = 2.03490298168565\n","       epochs = 1 index = 8500 loss = 1.7087186480219427\n","       epochs = 1 index = 9000 loss = 1.981380511551445\n","       epochs = 1 index = 9500 loss = 2.4570281071568556\n","       epochs = 1 index = 10000 loss = 1.8938270041680823\n","       epochs = 1 index = 10500 loss = 4.246004905603131\n","       epochs = 1 index = 11000 loss = 3.483964847536237\n","       epochs = 1 index = 11500 loss = 1.374617702182201\n","       epochs = 1 index = 12000 loss = 2.1222492953037904\n","       epochs = 1 index = 12500 loss = 6.029065122012991\n","       epochs = 1 index = 13000 loss = 1.780302660640364\n","       epochs = 1 index = 13500 loss = 2.6763408044279657\n","       epochs = 1 index = 14000 loss = 2.5038200277833194\n","       epochs = 1 index = 14500 loss = 2.2761896569862845\n","       epochs = 1 index = 15000 loss = 3.2984182102468704\n","       epochs = 1 index = 15500 loss = 2.1600798487579307\n","       epochs = 1 index = 16000 loss = 1.5860895592470936\n","       epochs = 1 index = 16500 loss = 1.397962591327746\n","       epochs = 1 index = 17000 loss = 1.5959640035091351\n","       epochs = 1 index = 17500 loss = 3.325944132849296\n","       epochs = 1 index = 18000 loss = 2.652768796374786\n","       epochs = 1 index = 18500 loss = 3.0931880858293055\n","       epochs = 1 index = 19000 loss = 1.517282797914124\n","       epochs = 1 index = 19500 loss = 1.5475580820044088\n","       epochs = 2 index = 0 loss = 2.1777624494497507\n","       epochs = 2 index = 500 loss = 3.275595610904939\n","       epochs = 2 index = 1000 loss = 1.6479674773237827\n","       epochs = 2 index = 1500 loss = 1.3241180700807065\n","       epochs = 2 index = 2000 loss = 1.5878157563487345\n","       epochs = 2 index = 2500 loss = 1.8030199172584953\n","       epochs = 2 index = 3000 loss = 2.937661750107444\n","       epochs = 2 index = 3500 loss = 2.77383243952192\n","       epochs = 2 index = 4000 loss = 2.001346674355931\n","       epochs = 2 index = 4500 loss = 2.4068976057900247\n","       epochs = 2 index = 5000 loss = 3.0931088721033775\n","       epochs = 2 index = 5500 loss = 1.630275180744688\n","       epochs = 2 index = 6000 loss = 2.2082878347281683\n","       epochs = 2 index = 6500 loss = 2.3755149857286364\n","       epochs = 2 index = 7000 loss = 1.6649690543673337\n","       epochs = 2 index = 7500 loss = 2.2244178458890977\n","       epochs = 2 index = 8000 loss = 1.7034523530483736\n","       epochs = 2 index = 8500 loss = 1.4945690054113001\n","       epochs = 2 index = 9000 loss = 1.684923012702302\n","       epochs = 2 index = 9500 loss = 2.163136936057977\n","       epochs = 2 index = 10000 loss = 1.4901104209038758\n","       epochs = 2 index = 10500 loss = 4.18437597948982\n","       epochs = 2 index = 11000 loss = 3.2172563970732586\n","       epochs = 2 index = 11500 loss = 1.204027269110833\n","       epochs = 2 index = 12000 loss = 1.9313404404711192\n","       epochs = 2 index = 12500 loss = 6.5504842471382\n","       epochs = 2 index = 13000 loss = 1.439674402536788\n","       epochs = 2 index = 13500 loss = 2.128448323423987\n","       epochs = 2 index = 14000 loss = 2.173509704251212\n","       epochs = 2 index = 14500 loss = 2.3522748876984627\n","       epochs = 2 index = 15000 loss = 2.34842439567239\n","       epochs = 2 index = 15500 loss = 1.973993191373546\n","       epochs = 2 index = 16000 loss = 1.2742259308440962\n","       epochs = 2 index = 16500 loss = 1.2531882767360616\n","       epochs = 2 index = 17000 loss = 1.4256309275419088\n","       epochs = 2 index = 17500 loss = 3.141083625774863\n","       epochs = 2 index = 18000 loss = 2.34290319644693\n","       epochs = 2 index = 18500 loss = 2.4873113847717416\n","       epochs = 2 index = 19000 loss = 1.256362136773917\n","       epochs = 2 index = 19500 loss = 1.3392318096258444\n","\n","*Info: Done with neural network learning using numerical derivative.\n","       Elapsed Time: 0:00:08.260539\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"GtatgbwkBrhY","executionInfo":{"status":"ok","timestamp":1602482645004,"user_tz":420,"elapsed":805,"user":{"displayName":"","photoUrl":"","userId":""}},"outputId":"527d9162-6c29-4c86-aaa1-06857101992b","colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["nn.accuracy(test_data)"],"execution_count":45,"outputs":[{"output_type":"stream","text":["       Current Accuracy =  0.7695\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["([0,\n","  1,\n","  2,\n","  3,\n","  4,\n","  5,\n","  7,\n","  9,\n","  10,\n","  11,\n","  12,\n","  13,\n","  14,\n","  15,\n","  16,\n","  17,\n","  18,\n","  19,\n","  21,\n","  22,\n","  23,\n","  24,\n","  25,\n","  26,\n","  27,\n","  28,\n","  29,\n","  30,\n","  31,\n","  32,\n","  33,\n","  34,\n","  35,\n","  36,\n","  37,\n","  39,\n","  40,\n","  41,\n","  43,\n","  44,\n","  45,\n","  46,\n","  47,\n","  49,\n","  50,\n","  51,\n","  52,\n","  53,\n","  54,\n","  55,\n","  56,\n","  57,\n","  58,\n","  59,\n","  60,\n","  62,\n","  64,\n","  67,\n","  68,\n","  69,\n","  70,\n","  71,\n","  72,\n","  73,\n","  74,\n","  75,\n","  76,\n","  78,\n","  79,\n","  80,\n","  81,\n","  82,\n","  83,\n","  85,\n","  86,\n","  87,\n","  88,\n","  89,\n","  90,\n","  91,\n","  92,\n","  93,\n","  94,\n","  95,\n","  96,\n","  98,\n","  99,\n","  100,\n","  101,\n","  102,\n","  103,\n","  104,\n","  105,\n","  106,\n","  107,\n","  108,\n","  109,\n","  112,\n","  113,\n","  115,\n","  117,\n","  118,\n","  120,\n","  121,\n","  122,\n","  123,\n","  125,\n","  127,\n","  129,\n","  130,\n","  131,\n","  132,\n","  133,\n","  135,\n","  136,\n","  137,\n","  138,\n","  139,\n","  140,\n","  141,\n","  142,\n","  143,\n","  145,\n","  147,\n","  148,\n","  150,\n","  152,\n","  153,\n","  154,\n","  155,\n","  156,\n","  157,\n","  158,\n","  159,\n","  160,\n","  161,\n","  162,\n","  163,\n","  164,\n","  165,\n","  166,\n","  168,\n","  171,\n","  172,\n","  173,\n","  174,\n","  176,\n","  178,\n","  180,\n","  182,\n","  183,\n","  185,\n","  186,\n","  188,\n","  189,\n","  190,\n","  191,\n","  192,\n","  193,\n","  194,\n","  196,\n","  197,\n","  199,\n","  200,\n","  201,\n","  202,\n","  203,\n","  204,\n","  205,\n","  206,\n","  207,\n","  208,\n","  209,\n","  210,\n","  212,\n","  213,\n","  214,\n","  215,\n","  216,\n","  217,\n","  220,\n","  221,\n","  222,\n","  223,\n","  224,\n","  225,\n","  227,\n","  228,\n","  229,\n","  230,\n","  231,\n","  234,\n","  235,\n","  236,\n","  237,\n","  238,\n","  239,\n","  240,\n","  244,\n","  246,\n","  248,\n","  249,\n","  251,\n","  252,\n","  253,\n","  254,\n","  255,\n","  256,\n","  258,\n","  262,\n","  263,\n","  264,\n","  265,\n","  267,\n","  269,\n","  270,\n","  271,\n","  272,\n","  273,\n","  274,\n","  275,\n","  276,\n","  278,\n","  279,\n","  280,\n","  281,\n","  283,\n","  284,\n","  285,\n","  286,\n","  288,\n","  289,\n","  291,\n","  292,\n","  293,\n","  294,\n","  296,\n","  297,\n","  298,\n","  302,\n","  303,\n","  305,\n","  306,\n","  308,\n","  309,\n","  310,\n","  311,\n","  312,\n","  314,\n","  315,\n","  316,\n","  318,\n","  322,\n","  323,\n","  324,\n","  326,\n","  327,\n","  329,\n","  330,\n","  331,\n","  332,\n","  333,\n","  334,\n","  335,\n","  336,\n","  337,\n","  339,\n","  342,\n","  343,\n","  345,\n","  347,\n","  348,\n","  350,\n","  351,\n","  353,\n","  354,\n","  356,\n","  357,\n","  358,\n","  359,\n","  360,\n","  361,\n","  364,\n","  365,\n","  366,\n","  367,\n","  368,\n","  369,\n","  370,\n","  371,\n","  372,\n","  373,\n","  375,\n","  377,\n","  378,\n","  379,\n","  380,\n","  381,\n","  382,\n","  383,\n","  384,\n","  385,\n","  386,\n","  387,\n","  388,\n","  389,\n","  390,\n","  392,\n","  393,\n","  394,\n","  395,\n","  396,\n","  397,\n","  398,\n","  399,\n","  400,\n","  402,\n","  404,\n","  407,\n","  408,\n","  409,\n","  410,\n","  411,\n","  413,\n","  414,\n","  415,\n","  416,\n","  417,\n","  418,\n","  419,\n","  420,\n","  421,\n","  422,\n","  423,\n","  424,\n","  426,\n","  427,\n","  428,\n","  430,\n","  433,\n","  434,\n","  437,\n","  438,\n","  439,\n","  440,\n","  441,\n","  442,\n","  443,\n","  444,\n","  446,\n","  447,\n","  448,\n","  450,\n","  451,\n","  452,\n","  453,\n","  454,\n","  455,\n","  456,\n","  457,\n","  459,\n","  461,\n","  462,\n","  463,\n","  467,\n","  469,\n","  471,\n","  472,\n","  473,\n","  475,\n","  476,\n","  477,\n","  480,\n","  481,\n","  482,\n","  485,\n","  487,\n","  488,\n","  489,\n","  490,\n","  491,\n","  492,\n","  493,\n","  494,\n","  496,\n","  498,\n","  499,\n","  500,\n","  501,\n","  503,\n","  504,\n","  505,\n","  506,\n","  508,\n","  509,\n","  510,\n","  512,\n","  513,\n","  516,\n","  517,\n","  518,\n","  521,\n","  522,\n","  523,\n","  524,\n","  525,\n","  526,\n","  528,\n","  529,\n","  530,\n","  532,\n","  533,\n","  534,\n","  535,\n","  537,\n","  539,\n","  540,\n","  541,\n","  545,\n","  546,\n","  547,\n","  548,\n","  549,\n","  552,\n","  554,\n","  555,\n","  556,\n","  557,\n","  558,\n","  560,\n","  561,\n","  562,\n","  564,\n","  566,\n","  567,\n","  568,\n","  571,\n","  573,\n","  574,\n","  575,\n","  576,\n","  577,\n","  579,\n","  581,\n","  583,\n","  584,\n","  585,\n","  586,\n","  587,\n","  588,\n","  590,\n","  592,\n","  593,\n","  594,\n","  595,\n","  597,\n","  598,\n","  599,\n","  600,\n","  602,\n","  604,\n","  607,\n","  608,\n","  609,\n","  611,\n","  612,\n","  613,\n","  614,\n","  615,\n","  616,\n","  617,\n","  618,\n","  619,\n","  620,\n","  622,\n","  623,\n","  625,\n","  626,\n","  630,\n","  632,\n","  633,\n","  634,\n","  635,\n","  636,\n","  637,\n","  639,\n","  640,\n","  642,\n","  643,\n","  644,\n","  645,\n","  646,\n","  647,\n","  648,\n","  649,\n","  650,\n","  651,\n","  652,\n","  653,\n","  656,\n","  657,\n","  658,\n","  660,\n","  662,\n","  663,\n","  665,\n","  666,\n","  669,\n","  670,\n","  672,\n","  675,\n","  676,\n","  677,\n","  678,\n","  679,\n","  680,\n","  681,\n","  682,\n","  683,\n","  686,\n","  687,\n","  688,\n","  689,\n","  690,\n","  694,\n","  695,\n","  696,\n","  697,\n","  699,\n","  700,\n","  701,\n","  702,\n","  703,\n","  704,\n","  705,\n","  706,\n","  711,\n","  712,\n","  713,\n","  715,\n","  716,\n","  719,\n","  721,\n","  722,\n","  723,\n","  724,\n","  725,\n","  726,\n","  727,\n","  728,\n","  729,\n","  730,\n","  731,\n","  732,\n","  733,\n","  734,\n","  735,\n","  736,\n","  738,\n","  741,\n","  742,\n","  743,\n","  744,\n","  745,\n","  746,\n","  747,\n","  748,\n","  749,\n","  750,\n","  751,\n","  752,\n","  753,\n","  754,\n","  755,\n","  756,\n","  758,\n","  759,\n","  762,\n","  763,\n","  764,\n","  765,\n","  766,\n","  767,\n","  768,\n","  769,\n","  770,\n","  771,\n","  772,\n","  773,\n","  775,\n","  777,\n","  779,\n","  780,\n","  782,\n","  783,\n","  786,\n","  788,\n","  789,\n","  790,\n","  792,\n","  794,\n","  795,\n","  796,\n","  797,\n","  798,\n","  799,\n","  802,\n","  803,\n","  804,\n","  807,\n","  808,\n","  809,\n","  810,\n","  811,\n","  812,\n","  813,\n","  814,\n","  815,\n","  816,\n","  817,\n","  818,\n","  819,\n","  820,\n","  821,\n","  822,\n","  823,\n","  824,\n","  825,\n","  826,\n","  828,\n","  829,\n","  830,\n","  831,\n","  833,\n","  834,\n","  835,\n","  836,\n","  837,\n","  838,\n","  840,\n","  841,\n","  842,\n","  843,\n","  845,\n","  846,\n","  847,\n","  848,\n","  849,\n","  850,\n","  851,\n","  852,\n","  853,\n","  854,\n","  855,\n","  858,\n","  859,\n","  860,\n","  861,\n","  862,\n","  863,\n","  865,\n","  867,\n","  868,\n","  870,\n","  871,\n","  873,\n","  874,\n","  875,\n","  880,\n","  882,\n","  883,\n","  884,\n","  885,\n","  886,\n","  887,\n","  888,\n","  889,\n","  890,\n","  891,\n","  892,\n","  893,\n","  894,\n","  895,\n","  896,\n","  897,\n","  900,\n","  903,\n","  904,\n","  905,\n","  906,\n","  907,\n","  908,\n","  909,\n","  910,\n","  911,\n","  912,\n","  913,\n","  916,\n","  917,\n","  918,\n","  919,\n","  920,\n","  921,\n","  922,\n","  923,\n","  925,\n","  927,\n","  928,\n","  929,\n","  932,\n","  933,\n","  937,\n","  938,\n","  940,\n","  941,\n","  942,\n","  943,\n","  944,\n","  945,\n","  946,\n","  948,\n","  949,\n","  952,\n","  953,\n","  954,\n","  957,\n","  958,\n","  962,\n","  963,\n","  964,\n","  966,\n","  967,\n","  970,\n","  971,\n","  972,\n","  973,\n","  974,\n","  976,\n","  977,\n","  978,\n","  979,\n","  980,\n","  981,\n","  984,\n","  985,\n","  986,\n","  987,\n","  988,\n","  989,\n","  990,\n","  991,\n","  992,\n","  993,\n","  994,\n","  995,\n","  996,\n","  997,\n","  1000,\n","  1001,\n","  1002,\n","  1004,\n","  1005,\n","  1006,\n","  1008,\n","  1009,\n","  1011,\n","  1013,\n","  1016,\n","  1017,\n","  1019,\n","  1020,\n","  1021,\n","  1023,\n","  1024,\n","  1025,\n","  1027,\n","  1028,\n","  1030,\n","  1031,\n","  1034,\n","  1035,\n","  1036,\n","  1037,\n","  1038,\n","  1040,\n","  1041,\n","  1042,\n","  1044,\n","  1045,\n","  1046,\n","  1047,\n","  1048,\n","  1049,\n","  1051,\n","  1053,\n","  1054,\n","  1055,\n","  1056,\n","  1057,\n","  1058,\n","  1059,\n","  1060,\n","  1061,\n","  1063,\n","  1064,\n","  1065,\n","  1066,\n","  1067,\n","  1069,\n","  1070,\n","  1071,\n","  1072,\n","  1075,\n","  1076,\n","  1078,\n","  1079,\n","  1080,\n","  1081,\n","  1083,\n","  1084,\n","  1085,\n","  1086,\n","  1087,\n","  1088,\n","  1090,\n","  1092,\n","  1094,\n","  1095,\n","  1096,\n","  1097,\n","  1098,\n","  1099,\n","  1100,\n","  1102,\n","  1103,\n","  1104,\n","  1105,\n","  1106,\n","  1108,\n","  1109,\n","  1110,\n","  1111,\n","  1113,\n","  1114,\n","  1115,\n","  1121,\n","  1122,\n","  1123,\n","  1126,\n","  1127,\n","  1129,\n","  1130,\n","  1131,\n","  1132,\n","  1133,\n","  1134,\n","  1135,\n","  1136,\n","  1137,\n","  1138,\n","  1139,\n","  1140,\n","  1141,\n","  1142,\n","  1143,\n","  1144,\n","  1145,\n","  1146,\n","  1148,\n","  1150,\n","  1151,\n","  1152,\n","  1153,\n","  1154,\n","  1155,\n","  1158,\n","  1159,\n","  1160,\n","  1161,\n","  1162,\n","  1163,\n","  1164,\n","  1165,\n","  1166,\n","  1168,\n","  1171,\n","  1172,\n","  1173,\n","  1174,\n","  1175,\n","  1177,\n","  1178,\n","  1179,\n","  1180,\n","  1182,\n","  1183,\n","  1184,\n","  1186,\n","  1187,\n","  1188,\n","  1189,\n","  1190,\n","  1192,\n","  1193,\n","  1195,\n","  1196,\n","  1197,\n","  1199,\n","  1201,\n","  1203,\n","  1205,\n","  1207,\n","  1208,\n","  1209,\n","  1210,\n","  1211,\n","  1212,\n","  1213,\n","  1214,\n","  1215,\n","  1216,\n","  1218,\n","  1220,\n","  1221,\n","  1222,\n","  1223,\n","  1225,\n","  1227,\n","  1228,\n","  1230,\n","  1231,\n","  1236,\n","  1237,\n","  1238,\n","  1239,\n","  1240,\n","  1241,\n","  1244,\n","  1245,\n","  1250,\n","  1252,\n","  1253,\n","  1254,\n","  1255,\n","  1257,\n","  1258,\n","  1261,\n","  1262,\n","  1265,\n","  1266,\n","  1269,\n","  1271,\n","  1273,\n","  1274,\n","  1276,\n","  1277,\n","  1278,\n","  1279,\n","  1280,\n","  1281,\n","  1282,\n","  1284,\n","  1285,\n","  1288,\n","  1289,\n","  1290,\n","  1292,\n","  1293,\n","  1294,\n","  1295,\n","  1296,\n","  1297,\n","  1298,\n","  1300,\n","  1302,\n","  1303,\n","  1304,\n","  1305,\n","  1306,\n","  1307,\n","  1309,\n","  1310,\n","  1311,\n","  1315,\n","  1316,\n","  1317,\n","  1318,\n","  1321,\n","  1322,\n","  1323,\n","  1327,\n","  1329,\n","  1332,\n","  1333,\n","  1334,\n","  1335,\n","  1336,\n","  1338,\n","  1340,\n","  1341,\n","  ...],\n"," [6,\n","  8,\n","  20,\n","  38,\n","  42,\n","  48,\n","  61,\n","  63,\n","  65,\n","  66,\n","  77,\n","  84,\n","  97,\n","  110,\n","  111,\n","  114,\n","  116,\n","  119,\n","  124,\n","  126,\n","  128,\n","  134,\n","  144,\n","  146,\n","  149,\n","  151,\n","  167,\n","  169,\n","  170,\n","  175,\n","  177,\n","  179,\n","  181,\n","  184,\n","  187,\n","  195,\n","  198,\n","  211,\n","  218,\n","  219,\n","  226,\n","  232,\n","  233,\n","  241,\n","  242,\n","  243,\n","  245,\n","  247,\n","  250,\n","  257,\n","  259,\n","  260,\n","  261,\n","  266,\n","  268,\n","  277,\n","  282,\n","  287,\n","  290,\n","  295,\n","  299,\n","  300,\n","  301,\n","  304,\n","  307,\n","  313,\n","  317,\n","  319,\n","  320,\n","  321,\n","  325,\n","  328,\n","  338,\n","  340,\n","  341,\n","  344,\n","  346,\n","  349,\n","  352,\n","  355,\n","  362,\n","  363,\n","  374,\n","  376,\n","  391,\n","  401,\n","  403,\n","  405,\n","  406,\n","  412,\n","  425,\n","  429,\n","  431,\n","  432,\n","  435,\n","  436,\n","  445,\n","  449,\n","  458,\n","  460,\n","  464,\n","  465,\n","  466,\n","  468,\n","  470,\n","  474,\n","  478,\n","  479,\n","  483,\n","  484,\n","  486,\n","  495,\n","  497,\n","  502,\n","  507,\n","  511,\n","  514,\n","  515,\n","  519,\n","  520,\n","  527,\n","  531,\n","  536,\n","  538,\n","  542,\n","  543,\n","  544,\n","  550,\n","  551,\n","  553,\n","  559,\n","  563,\n","  565,\n","  569,\n","  570,\n","  572,\n","  578,\n","  580,\n","  582,\n","  589,\n","  591,\n","  596,\n","  601,\n","  603,\n","  605,\n","  606,\n","  610,\n","  621,\n","  624,\n","  627,\n","  628,\n","  629,\n","  631,\n","  638,\n","  641,\n","  654,\n","  655,\n","  659,\n","  661,\n","  664,\n","  667,\n","  668,\n","  671,\n","  673,\n","  674,\n","  684,\n","  685,\n","  691,\n","  692,\n","  693,\n","  698,\n","  707,\n","  708,\n","  709,\n","  710,\n","  714,\n","  717,\n","  718,\n","  720,\n","  737,\n","  739,\n","  740,\n","  757,\n","  760,\n","  761,\n","  774,\n","  776,\n","  778,\n","  781,\n","  784,\n","  785,\n","  787,\n","  791,\n","  793,\n","  800,\n","  801,\n","  805,\n","  806,\n","  827,\n","  832,\n","  839,\n","  844,\n","  856,\n","  857,\n","  864,\n","  866,\n","  869,\n","  872,\n","  876,\n","  877,\n","  878,\n","  879,\n","  881,\n","  898,\n","  899,\n","  901,\n","  902,\n","  914,\n","  915,\n","  924,\n","  926,\n","  930,\n","  931,\n","  934,\n","  935,\n","  936,\n","  939,\n","  947,\n","  950,\n","  951,\n","  955,\n","  956,\n","  959,\n","  960,\n","  961,\n","  965,\n","  968,\n","  969,\n","  975,\n","  982,\n","  983,\n","  998,\n","  999,\n","  1003,\n","  1007,\n","  1010,\n","  1012,\n","  1014,\n","  1015,\n","  1018,\n","  1022,\n","  1026,\n","  1029,\n","  1032,\n","  1033,\n","  1039,\n","  1043,\n","  1050,\n","  1052,\n","  1062,\n","  1068,\n","  1073,\n","  1074,\n","  1077,\n","  1082,\n","  1089,\n","  1091,\n","  1093,\n","  1101,\n","  1107,\n","  1112,\n","  1116,\n","  1117,\n","  1118,\n","  1119,\n","  1120,\n","  1124,\n","  1125,\n","  1128,\n","  1147,\n","  1149,\n","  1156,\n","  1157,\n","  1167,\n","  1169,\n","  1170,\n","  1176,\n","  1181,\n","  1185,\n","  1191,\n","  1194,\n","  1198,\n","  1200,\n","  1202,\n","  1204,\n","  1206,\n","  1217,\n","  1219,\n","  1224,\n","  1226,\n","  1229,\n","  1232,\n","  1233,\n","  1234,\n","  1235,\n","  1242,\n","  1243,\n","  1246,\n","  1247,\n","  1248,\n","  1249,\n","  1251,\n","  1256,\n","  1259,\n","  1260,\n","  1263,\n","  1264,\n","  1267,\n","  1268,\n","  1270,\n","  1272,\n","  1275,\n","  1283,\n","  1286,\n","  1287,\n","  1291,\n","  1299,\n","  1301,\n","  1308,\n","  1312,\n","  1313,\n","  1314,\n","  1319,\n","  1320,\n","  1324,\n","  1325,\n","  1326,\n","  1328,\n","  1330,\n","  1331,\n","  1337,\n","  1339,\n","  1345,\n","  1353,\n","  1364,\n","  1371,\n","  1378,\n","  1389,\n","  1391,\n","  1393,\n","  1394,\n","  1398,\n","  1404,\n","  1411,\n","  1413,\n","  1415,\n","  1421,\n","  1425,\n","  1429,\n","  1433,\n","  1437,\n","  1441,\n","  1443,\n","  1444,\n","  1447,\n","  1450,\n","  1453,\n","  1463,\n","  1464,\n","  1465,\n","  1466,\n","  1467,\n","  1470,\n","  1474,\n","  1476,\n","  1499,\n","  1500,\n","  1502,\n","  1509,\n","  1516,\n","  1522,\n","  1523,\n","  1524,\n","  1525,\n","  1527,\n","  1530,\n","  1541,\n","  1542,\n","  1547,\n","  1549,\n","  1551,\n","  1553,\n","  1556,\n","  1559,\n","  1560,\n","  1562,\n","  1567,\n","  1568,\n","  1569,\n","  1571,\n","  1572,\n","  1573,\n","  1581,\n","  1583,\n","  1584,\n","  1599,\n","  1609,\n","  1613,\n","  1616,\n","  1618,\n","  1627,\n","  1634,\n","  1640,\n","  1641,\n","  1651,\n","  1655,\n","  1658,\n","  1660,\n","  1663,\n","  1664,\n","  1669,\n","  1671,\n","  1675,\n","  1678,\n","  1679,\n","  1681,\n","  1684,\n","  1686,\n","  1687,\n","  1694,\n","  1695,\n","  1696,\n","  1701,\n","  1702,\n","  1706,\n","  1709,\n","  1716,\n","  1717,\n","  1718,\n","  1719,\n","  1722,\n","  1727,\n","  1732,\n","  1737,\n","  1740,\n","  1741,\n","  1747,\n","  1749,\n","  1750,\n","  1751,\n","  1754,\n","  1755,\n","  1756,\n","  1758,\n","  1759,\n","  1761,\n","  1772,\n","  1774,\n","  1782,\n","  1790,\n","  1800,\n","  1801,\n","  1808,\n","  1809,\n","  1813,\n","  1816,\n","  1823,\n","  1827,\n","  1828,\n","  1839,\n","  1843,\n","  1850,\n","  1855,\n","  1859,\n","  1862,\n","  1865,\n","  1874,\n","  1877,\n","  1878,\n","  1880,\n","  1882,\n","  1893,\n","  1899,\n","  1903,\n","  1910,\n","  1911,\n","  1912,\n","  1914,\n","  1917,\n","  1924,\n","  1926,\n","  1931,\n","  1938,\n","  1940,\n","  1941,\n","  1942,\n","  1946,\n","  1948,\n","  1952,\n","  1954,\n","  1955,\n","  1960,\n","  1961,\n","  1963,\n","  1968,\n","  1970,\n","  1973,\n","  1978,\n","  1982,\n","  1984,\n","  1989,\n","  2001,\n","  2004,\n","  2007,\n","  2009,\n","  2016,\n","  2021,\n","  2024,\n","  2030,\n","  2035,\n","  2037,\n","  2038,\n","  2040,\n","  2043,\n","  2044,\n","  2046,\n","  2047,\n","  2050,\n","  2052,\n","  2053,\n","  2056,\n","  2057,\n","  2063,\n","  2065,\n","  2073,\n","  2084,\n","  2090,\n","  2093,\n","  2094,\n","  2098,\n","  2099,\n","  2102,\n","  2107,\n","  2109,\n","  2111,\n","  2114,\n","  2115,\n","  2118,\n","  2119,\n","  2121,\n","  2125,\n","  2129,\n","  2130,\n","  2134,\n","  2135,\n","  2138,\n","  2142,\n","  2144,\n","  2146,\n","  2148,\n","  2149,\n","  2152,\n","  2159,\n","  2163,\n","  2168,\n","  2169,\n","  2172,\n","  2173,\n","  2177,\n","  2179,\n","  2180,\n","  2182,\n","  2185,\n","  2186,\n","  2189,\n","  2192,\n","  2197,\n","  2201,\n","  2203,\n","  2204,\n","  2208,\n","  2211,\n","  2213,\n","  2214,\n","  2215,\n","  2218,\n","  2219,\n","  2224,\n","  2225,\n","  2232,\n","  2233,\n","  2237,\n","  2241,\n","  2246,\n","  2251,\n","  2263,\n","  2266,\n","  2269,\n","  2271,\n","  2272,\n","  2279,\n","  2286,\n","  2289,\n","  2291,\n","  2293,\n","  2297,\n","  2298,\n","  2299,\n","  2307,\n","  2309,\n","  2322,\n","  2325,\n","  2326,\n","  2338,\n","  2339,\n","  2349,\n","  2351,\n","  2362,\n","  2363,\n","  2369,\n","  2375,\n","  2378,\n","  2380,\n","  2381,\n","  2382,\n","  2386,\n","  2387,\n","  2389,\n","  2393,\n","  2394,\n","  2395,\n","  2402,\n","  2404,\n","  2406,\n","  2413,\n","  2419,\n","  2422,\n","  2423,\n","  2425,\n","  2430,\n","  2445,\n","  2447,\n","  2451,\n","  2457,\n","  2460,\n","  2462,\n","  2464,\n","  2467,\n","  2470,\n","  2488,\n","  2507,\n","  2512,\n","  2513,\n","  2514,\n","  2515,\n","  2516,\n","  2520,\n","  2525,\n","  2526,\n","  2530,\n","  2535,\n","  2537,\n","  2539,\n","  2540,\n","  2542,\n","  2543,\n","  2545,\n","  2550,\n","  2552,\n","  2556,\n","  2559,\n","  2561,\n","  2564,\n","  2573,\n","  2574,\n","  2578,\n","  2579,\n","  2582,\n","  2584,\n","  2586,\n","  2589,\n","  2598,\n","  2600,\n","  2604,\n","  2607,\n","  2608,\n","  2614,\n","  2617,\n","  2628,\n","  2630,\n","  2631,\n","  2635,\n","  2636,\n","  2640,\n","  2644,\n","  2645,\n","  2648,\n","  2650,\n","  2653,\n","  2654,\n","  2665,\n","  2667,\n","  2668,\n","  2670,\n","  2678,\n","  2680,\n","  2683,\n","  2686,\n","  2691,\n","  2695,\n","  2698,\n","  2701,\n","  2708,\n","  2709,\n","  2715,\n","  2724,\n","  2728,\n","  2730,\n","  2739,\n","  2740,\n","  2743,\n","  2744,\n","  2751,\n","  2754,\n","  2758,\n","  2770,\n","  2771,\n","  2774,\n","  2780,\n","  2783,\n","  2790,\n","  2793,\n","  2797,\n","  2800,\n","  2804,\n","  2805,\n","  2809,\n","  2810,\n","  2820,\n","  2832,\n","  2834,\n","  2836,\n","  2849,\n","  2850,\n","  2852,\n","  2856,\n","  2859,\n","  2862,\n","  2869,\n","  2872,\n","  2882,\n","  2886,\n","  2888,\n","  2895,\n","  2896,\n","  2897,\n","  2898,\n","  2901,\n","  2905,\n","  2909,\n","  2911,\n","  2915,\n","  2919,\n","  2925,\n","  2927,\n","  2930,\n","  2935,\n","  2936,\n","  2937,\n","  2939,\n","  2949,\n","  2953,\n","  2960,\n","  2961,\n","  2969,\n","  2970,\n","  2975,\n","  2986,\n","  2987,\n","  2990,\n","  2998,\n","  3002,\n","  3005,\n","  3012,\n","  3023,\n","  3025,\n","  3029,\n","  3033,\n","  3046,\n","  3060,\n","  3061,\n","  3062,\n","  3064,\n","  3065,\n","  3068,\n","  3072,\n","  3073,\n","  3078,\n","  3086,\n","  3089,\n","  3091,\n","  3095,\n","  3100,\n","  3102,\n","  3112,\n","  3114,\n","  3117,\n","  3119,\n","  3122,\n","  3123,\n","  3130,\n","  3133,\n","  3136,\n","  3139,\n","  3145,\n","  3153,\n","  3155,\n","  3157,\n","  3158,\n","  3163,\n","  3166,\n","  3176,\n","  3183,\n","  3186,\n","  3189,\n","  3193,\n","  3197,\n","  3198,\n","  3204,\n","  3205,\n","  3206,\n","  3216,\n","  3224,\n","  3225,\n","  3233,\n","  3235,\n","  3236,\n","  3240,\n","  3242,\n","  3245,\n","  3246,\n","  3249,\n","  3254,\n","  3262,\n","  3263,\n","  3269,\n","  3279,\n","  3280,\n","  3282,\n","  3284,\n","  3287,\n","  3288,\n","  3289,\n","  3290,\n","  3295,\n","  3311,\n","  3312,\n","  3313,\n","  3316,\n","  3319,\n","  3323,\n","  3324,\n","  3329,\n","  3330,\n","  3333,\n","  3336,\n","  3340,\n","  3343,\n","  3345,\n","  3348,\n","  3349,\n","  3364,\n","  3370,\n","  3374,\n","  3376,\n","  3377,\n","  3381,\n","  3384,\n","  3388,\n","  3389,\n","  3394,\n","  3404,\n","  3405,\n","  3406,\n","  3408,\n","  3410,\n","  3414,\n","  3416,\n","  3429,\n","  3431,\n","  3436,\n","  3437,\n","  3440,\n","  3447,\n","  3450,\n","  3453,\n","  3460,\n","  3462,\n","  3465,\n","  3466,\n","  3468,\n","  3473,\n","  3490,\n","  3492,\n","  3494,\n","  3499,\n","  3502,\n","  3503,\n","  3506,\n","  3509,\n","  3510,\n","  3516,\n","  3519,\n","  3520,\n","  3521,\n","  3537,\n","  3543,\n","  3549,\n","  3551,\n","  3552,\n","  3555,\n","  3556,\n","  3558,\n","  3559,\n","  3561,\n","  3563,\n","  3565,\n","  3567,\n","  3573,\n","  3574,\n","  3575,\n","  3576,\n","  3578,\n","  3580,\n","  3583,\n","  3588,\n","  3591,\n","  3597,\n","  3599,\n","  3600,\n","  3604,\n","  3612,\n","  3614,\n","  3626,\n","  3627,\n","  3629,\n","  3631,\n","  3633,\n","  3635,\n","  3644,\n","  3645,\n","  3662,\n","  3664,\n","  3672,\n","  3674,\n","  3691,\n","  3702,\n","  3704,\n","  3705,\n","  3707,\n","  3708,\n","  3709,\n","  3713,\n","  3716,\n","  3718,\n","  3723,\n","  3726,\n","  3727,\n","  3728,\n","  3732,\n","  3737,\n","  3749,\n","  3751,\n","  3755,\n","  3756,\n","  3757,\n","  3758,\n","  3763,\n","  3767,\n","  3771,\n","  3778,\n","  3780,\n","  3781,\n","  3782,\n","  3793,\n","  3794,\n","  3796,\n","  3801,\n","  3806,\n","  3807,\n","  3808,\n","  3811,\n","  3816,\n","  3817,\n","  3820,\n","  3821,\n","  3828,\n","  3829,\n","  3833,\n","  3834,\n","  ...])"]},"metadata":{"tags":[]},"execution_count":45}]},{"cell_type":"code","metadata":{"id":"T__slkJJBrhm"},"source":[""],"execution_count":null,"outputs":[]}]}